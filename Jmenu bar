/*
Java JMenuBar, JMenu and JMenuItem
The JMenuBar class is used to display menubar on the window or frame. It may 
have several menus.

The object of JMenu class is a pull down menu component which is displayed from the menu bar. It
inherits the JMenuItem class.

The object of JMenuItem class adds a simple labeled menu item. The items used in a menu must belong
to the JMenuItem or any of its subclass.
*/

package JavaSwing;
import javax.swing.JFrame;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
public class Jmenubar extends JFrame {
 private JMenuBar menubar=new JMenuBar();
 public Jmenubar(String title) {
      setTitle(title);
      setDefaultCloseOperation(EXIT_ON_CLOSE);
      setJMenuBar(menubar);
      JMenu fileMenu=new JMenu("File");
      JMenu edit=new JMenu("Edit");
       JMenu source=new JMenu("Source");
       menubar.add(fileMenu);
       menubar.add(edit);
       menubar.add(source);
       }
       public static void main(String args[]){
       Jmenubar window=new Jmenubar("Eclipse");
       window.setBounds(30,30,300,300);
       window.setVisible(true);
       }}
      
      Output:
       _________________________
      |Eclipse       - [] *    |
      | File Edit Source       |
      |                        |
      |                        |
      |                        |
      |                        |
      |                        |
      |________________________|
      
      
   //Example 2
   
      package JavaSwing;
      import javax.swing.*;
      public class Jmenubar1 {
      JMenu menu,submenu;
      JMenuItem i1,,i2,i3,i4,i5;
      
      JMenubar1(){
      JFrame f=new JFrame("Menu and MenuItem ");
      JMenuBar mb=new JMenuBar();
      menu=new JMenu("File");
      submenu=new JMenu("edit");
      i1=new JMenuItem("New");
      i2=new JMenuItem("Open");
       i3=new JMenuItem("Open File");
        i4=new JMenuItem("Save");
         i5=new JMenuItem("Save as");
         menu.add(i1);
         menu.add(i2);
         menu.add(i3);
         menu.add(i4);
         menu.add(i5);
         menu.add(submenu);
         mb.add(menu);
        f.setJmenuBar(mb);
        f.setSize(400,400);
        f.setLayout(null);
        f.setVisible(true);
             }
       public static void main(String args[]) {
       new Jmenubar1();
       }
       Output:
       [File]
       
       ___________
      |New       | 
      | Open     |
      | Open File|
      | Save     |
      | Save as  |    ____________
      | edit>    |    |  Save     |
      |__________|    |  Save as  |
                      |___________|           
       
       
       Example 3
       package JavaSwing;
       import java.awt.event.KeyEvent;
       import javax.swing.JFrame;
       import javax.swing.JMenu;
       import javax.swing.JMenuBar;
       import javax.swing.JMenuItem;
       public class Menufiles {
       public static void main(final String args[])
       {
       JFrame frame=new JFrame("ABC");
       frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
       JMenuBar menuBar=new JMenuBar();
       JMenu fileMenu=new JMenu("File");
       fileMenu.setMnemonic(KeyEvent.VK_F);
       menuBar.add(fileMenu);
       
/*       JMenuBar : setMnemonic() and addSeparator()

We can add shortcuts for the File and Elements menu items by adding the following statements after you.
Add the menu items to the menu bar:

menu1.setMnemonic(‘F’); // Create shortcut

menu2.setMnemonic(‘E’); // Create shortcut

This method is inherited from the AbstractButton class, so all subclasses of this class inherit this
method. The argument is a character from the label for the item that is to be the shortcut
character — under Windows, the File menu would then pop up if you key Alt+F. The effect of 
setMnemonic() is to implement the shortcut and underline the shortcut character letter in 
the menu label. The shortcut for each menu on the menu bar must be a unique key combination.

addSeparator () :

The separator appears following the previous menu item that you added to the menu.
*/
      JMenuItem newMenuItem=new JMenuItem("New",KeyEvent.VK_N);
      fileMenu.add(newMenuItem);
      frame.setJMenuBar(menuBar);
      frame.setSize(350,250);
      frame.setVisible(true);
      }}
     
     
     Output:
     
     
     _____________________________
     |ABC              - [] *    | 
     |File                       |
     |New                        |
     |                           |
     |                           |
     |                           |
     |                           |
     |                           |
     |                           |
     |___________________________|
     
